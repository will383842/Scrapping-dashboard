# ============================================================================
# NGINX CONFIGURATION - SCRAPER PRO PRODUCTION
# Version: 2.0 Production-Ready avec sécurité et performance (corrigée)
# ============================================================================

# ==========================================================================
# CONFIGURATION GLOBALE
# ==========================================================================
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimisations performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # ==========================================================================
    # CONFIGURATION HTTP DE BASE
    # ==========================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format personnalisé
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # ==========================================================================
    # OPTIMISATIONS PERFORMANCE
    # ==========================================================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    server_tokens off;

    # Buffers
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # ==========================================================================
    # COMPRESSION GZIP
    # ==========================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    # OK: les valeurs ci-dessous sont pour gzip_proxied (pas "expires")
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/xml
        application/xhtml+xml
        application/rss+xml
        application/javascript
        application/json;
    gzip_disable "MSIE [1-6]\.";

    # ==========================================================================
    # SÉCURITÉ
    # ==========================================================================
    # Headers de sécurité
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # ==========================================================================
    # RATE LIMITING
    # ==========================================================================
    # Zone pour limitation du taux de requêtes
    limit_req_zone $binary_remote_addr zone=dashboard:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;

    # Zone pour limitation des connexions
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # ==========================================================================
    # UPSTREAM - LOAD BALANCING DASHBOARD
    # ==========================================================================
    upstream dashboard_backend {
        server dashboard:8501 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Upstream pour monitoring (si activé)
    upstream prometheus_backend {
        server prometheus:9090 weight=1 max_fails=2 fail_timeout=10s;
    }

    upstream grafana_backend {
        server grafana:3000 weight=1 max_fails=2 fail_timeout=10s;
    }

    # ==========================================================================
    # CACHE CONFIGURATION
    # ==========================================================================
    # Cache pour fichiers statiques
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static:10m 
                     max_size=100m inactive=60m use_temp_path=off;

    # Cache pour API responses
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api:10m 
                     max_size=50m inactive=10m use_temp_path=off;

    # ==========================================================================
    # SERVER HTTP (REDIRECTION HTTPS)
    # ==========================================================================
    server {
        listen 80;
        server_name _;
        server_tokens off;

        # Redirection HTTPS pour production
        # return 301 https://$server_name$request_uri;
        
        # Pour développement local, servir directement
        location / {
            return 301 http://$server_name:8501$request_uri;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type "text/plain";
        }
    }

    # ==========================================================================
    # SERVER PRINCIPAL SCRAPER PRO
    # ==========================================================================
    server {
        listen 80;
        # listen 443 ssl http2; # Décommentez pour HTTPS
        server_name localhost scraper-pro.local;
        
        # ==========================================================================
        # CONFIGURATION SSL (à activer en production)
        # ==========================================================================
        # ssl_certificate /etc/nginx/ssl/fullchain.pem;
        # ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        # ssl_prefer_server_ciphers off;
        # ssl_session_cache shared:SSL:10m;
        # ssl_session_timeout 10m;
        
        # HSTS Header (seulement si HTTPS)
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # ==========================================================================
        # RATE LIMITING PAR LOCATION
        # ==========================================================================
        # Limitation globale
        limit_req zone=dashboard burst=20 nodelay;
        limit_conn perip 10;
        limit_conn perserver 100;

        # ==========================================================================
        # DASHBOARD PRINCIPAL - STREAMLIT (dynamique => pas de cache proxy)
        # ==========================================================================
        location / {
            proxy_pass http://dashboard_backend;
            
            # Headers proxy standards
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $server_port;

            # Support WebSocket pour Streamlit
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

            # Timeouts optimisés pour Streamlit
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
            proxy_buffering off;
            
            # Désactiver le cache côté Nginx pour le dynamique
            proxy_cache off;
            expires -1;  # ✅ pas de cache via directive 'expires'
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
        }

        # ==========================================================================
        # API ENDPOINTS SPÉCIALISÉS
        # ==========================================================================
        # Health check Streamlit
        location /_stcore/health {
            proxy_pass http://dashboard_backend;
            access_log off;
            proxy_cache api;
            proxy_cache_valid 200 30s;
        }

        # Static files Streamlit (peuvent être mis en cache)
        location ~* ^/_stcore/static/ {
            proxy_pass http://dashboard_backend;
            proxy_cache static;
            proxy_cache_valid 200 1h;
            expires 1h;  # ✅ cache statique correct
            add_header Cache-Control "public, immutable" always;
        }

        # ==========================================================================
        # MONITORING ENDPOINTS (si profil monitoring activé)
        # ==========================================================================
        location /prometheus/ {
            proxy_pass http://prometheus_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Limitation d'accès par IP (optionnel)
            # allow 192.168.0.0/16;
            # allow 10.0.0.0/8;
            # deny all;
        }

        location /grafana/ {
            proxy_pass http://grafana_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Support WebSocket pour Grafana
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # ==========================================================================
        # ENDPOINTS DE SÉCURITÉ ET MAINTENANCE
        # ==========================================================================
        # Endpoint de santé système
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type "text/plain";
        }

        # Status Nginx détaillé (accès restreint)
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/24;  # Réseau Docker
            deny all;
        }

        # Blocage des endpoints sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Blocage fichiers système
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ==========================================================================
        # GESTION DES ERREURS PERSONNALISÉES
        # ==========================================================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/error_pages;
            internal;
        }
        
        location = /50x.html {
            root /var/www/error_pages;
            internal;
        }

        # Maintenance mode (décommentez pour activer)
        # location / {
        #     return 503;
        # }
        # 
        # error_page 503 @maintenance;
        # location @maintenance {
        #     root /var/www/maintenance;
        #     rewrite ^(.*)$ /maintenance.html break;
        # }
    }

    # ==========================================================================
    # SERVEUR DE DÉVELOPPEMENT (port alternatif)
    # ==========================================================================
    server {
        listen 8080;
        server_name localhost;
        
        # Configuration allégée pour développement
        location / {
            proxy_pass http://dashboard_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Pas de cache en développement
            proxy_cache off;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
        }
    }

    # ==========================================================================
    # INCLUDES ADDITIONNELS
    # ==========================================================================
    include /etc/nginx/conf.d/*.conf;
}
