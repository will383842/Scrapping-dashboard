# ============================================================================
# POSTGRESQL CONFIGURATION - SCRAPER PRO PRODUCTION (CORRIGÉ v2.1)
# Version: 2.1 - Configuration optimisée et simplifiée pour Docker
# ============================================================================

# ==========================================================================
# CONNECTIONS ET AUTHENTIFICATION
# ==========================================================================
max_connections = 100
superuser_reserved_connections = 3
listen_addresses = '*'
port = 5432

# Paramètres de timeout pour éviter "connection already closed" - CORRIGÉS
tcp_keepalives_idle = 600          # 10 minutes
tcp_keepalives_interval = 30       # 30 secondes  
tcp_keepalives_count = 3
idle_in_transaction_session_timeout = 1800000  # 30 minutes en milliseconds

# ==========================================================================  
# MÉMOIRE - Ajustée pour conteneur Docker
# ==========================================================================
shared_buffers = 256MB             # Augmenté pour performance
effective_cache_size = 1GB         # Cache plus large
work_mem = 32MB                    # Augmenté pour requêtes complexes
maintenance_work_mem = 128MB       # Augmenté pour maintenance
autovacuum_work_mem = 128MB        

# ==========================================================================
# WRITE AHEAD LOG (WAL) - Optimisé
# ==========================================================================
wal_buffers = 32MB                 # Augmenté
wal_level = replica
max_wal_size = 2GB                 # Augmenté
min_wal_size = 512MB               # Augmenté
checkpoint_completion_target = 0.9
checkpoint_timeout = 10min         # Augmenté
checkpoint_warning = 30s

# ==========================================================================
# QUERY PLANNER - Optimisé pour SSD
# ==========================================================================
random_page_cost = 1.0             # Optimisé pour SSD
seq_page_cost = 1.0
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025
effective_io_concurrency = 300     # Augmenté pour SSD performance

# ==========================================================================
# LOGGING - Simplifié pour production
# ==========================================================================
log_destination = 'stderr'
logging_collector = off            # Simplifié pour Docker
log_min_messages = info            # Plus verbeux pour monitoring
log_min_error_statement = error
log_min_duration_statement = 2000  # Log requêtes > 2 secondes
log_statement = 'none'
log_checkpoints = on
log_connections = on
log_disconnections = on
log_line_prefix = '%t [%p] %q%u@%d '
log_timezone = 'UTC'

# Log des requêtes lentes pour optimisation
log_lock_waits = on
log_temp_files = 0

# ==========================================================================
# AUTOVACUUM - Optimisé pour charge de production
# ==========================================================================
autovacuum = on
autovacuum_max_workers = 3         # Augmenté
autovacuum_naptime = 30s           # Plus fréquent
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1  # Plus agressif
autovacuum_analyze_scale_factor = 0.05 # Plus agressif
autovacuum_vacuum_cost_delay = 10ms    # Plus rapide
autovacuum_vacuum_cost_limit = 1000    # Limite plus haute

# ==========================================================================
# STATISTIQUES ET MONITORING
# ==========================================================================
track_activities = on
track_counts = on  
track_functions = none
track_io_timing = on
track_wal_io_timing = on           # Ajouté pour monitoring WAL

# Statistiques étendues
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.max = 10000
pg_stat_statements.track = all
pg_stat_statements.save = on

# ==========================================================================
# LOCALE ET FORMATAGE
# ==========================================================================
datestyle = 'iso, mdy'
timezone = 'UTC'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'

# ==========================================================================
# SÉCURITÉ
# ==========================================================================
ssl = off                          # Désactivé pour éviter problèmes conteneur
password_encryption = scram-sha-256
row_security = on

# ==========================================================================
# PERFORMANCE AVANCÉE
# ==========================================================================
# Parallel queries - Optimisé
max_worker_processes = 8
max_parallel_workers_per_gather = 4
max_parallel_workers = 8
max_parallel_maintenance_workers = 4

# JIT - Activé pour requêtes complexes
jit = on
jit_above_cost = 100000
jit_inline_above_cost = 500000
jit_optimize_above_cost = 500000

# ==========================================================================
# BACKGROUND WRITER - Optimisé
# ==========================================================================
bgwriter_delay = 100ms             # Plus fréquent
bgwriter_lru_maxpages = 200        # Plus de pages
bgwriter_lru_multiplier = 3.0      # Plus agressif
bgwriter_flush_after = 512kB

# ==========================================================================
# VACUUM ET MAINTENANCE
# ==========================================================================
vacuum_cost_delay = 0              # Pas de délai
vacuum_cost_page_hit = 1
vacuum_cost_page_miss = 2          # Réduit
vacuum_cost_page_dirty = 20
vacuum_cost_limit = 2000           # Limite plus haute

# ==========================================================================
# RÉPLICATION (pour évolutions futures)
# ==========================================================================
# En cas de besoin de réplication
max_wal_senders = 3
wal_keep_size = 1GB
hot_standby = on

# ==========================================================================
# EXTENSIONS ET MODULES
# ==========================================================================
# Extensions préchargées pour performance
shared_preload_libraries = 'pg_stat_statements'

# ==========================================================================
# TUNING SPÉCIFIQUE SCRAPER PRO
# ==========================================================================
# Paramètres optimisés pour les charges de scraping
statement_timeout = 0              # Pas de timeout global
lock_timeout = 30s                 # Timeout sur les locks
idle_in_transaction_session_timeout = 1800000  # 30 minutes

# Cache de requêtes
log_statement_stats = off
log_parser_stats = off
log_planner_stats = off
log_executor_stats = off

# ==========================================================================
# MONITORING ET ALERTES
# ==========================================================================
# Configuration pour monitoring externe
log_checkpoints = on
log_connections = on
log_disconnections = on
log_hostname = off                 # Performance

# Statistiques pour Prometheus/monitoring
track_commit_timestamp = off       # Performance si pas de réplication

# ==========================================================================
# OPTIMISATIONS FINALES
# ==========================================================================
# Désactiver la collecte de stats coûteuses si pas nécessaires
track_functions = none
update_process_title = off         # Petit gain de performance

# Full page writes après crash
full_page_writes = on
wal_log_hints = off               # Performance si pas de réplication

# Compression WAL pour économiser l'espace
wal_compression = on

# ==========================================================================
# COMMENTAIRES FINAUX
# ==========================================================================
# Cette configuration est optimisée pour :
# - Conteneur Docker avec ressources limitées mais suffisantes
# - Charge de travail mixte (lecture/écriture)
# - Données de scraping avec insertions fréquentes
# - Monitoring et observabilité
# - Stabilité en production